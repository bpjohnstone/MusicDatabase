@model IEnumerable<MusicalEventByLocation>
@using MusicDatabase.ViewModel

<table class="table">

    @foreach (var eventListing in Model.OrderByDescending(e => e.EventDate))
            {
        <tr>
            <td>
                @Html.ActionLink(eventListing.EventDate.ToString("d MMMM yyyy"), "Details", "MusicalEvents", new { ID = eventListing.ID }, null)
            </td>
            <td>
                @if (eventListing.EventType != EventType.Concert)
                {
                    <text>@eventListing.EventGroupName </text>

                    switch (eventListing.EventType)
                    {
                        case EventType.Festival:
                            <span style="font-weight: bold; font-size: 10px; color: red;">[Festival]</span>
                            break;
                        case EventType.MultiDayFestival:
                            <span style="font-weight: bold; font-size: 10px; color: maroon;">[Multi-Day Festival]</span>
                            break;
                    }

                    <text> - </text>
                }

                @if (!string.IsNullOrWhiteSpace(eventListing.EventName))
                {
                    <text>@eventListing.EventName - </text>
                }

                @{
                    var count = eventListing.Headliners.Count();
                    var current = 1;

                    foreach (var headliner in eventListing.Headliners.OrderBy(p => p.Position))
                    {
                        if ((count > 1) && (current > 1))
                        {
                            if (current != count)
                            {
                                <text>, </text>
                            }
                            else
                            {
                                <text> and </text>
                            }
                        }


                        var performerCount = headliner.Performers.Count();
                        var performerIndex = 1;

                        foreach (var performer in headliner.Performers.OrderBy(p => p.Position))
                        {
                            if ((performerCount > 1) && (performerIndex > 1))
                            {
                                if (performerIndex == 2)
                                {
                                    <text> performing with </text>
                                }
                                else if (performerIndex < performerCount)
                                {
                                    @Html.Raw(", ");
                                }
                                else
                                {
                                    <text> and </text>
                                }
                            }

                            @Html.ActionLink(performer.MusicalEntityName, "Details", "MusicalEntities", new { ID = performer.MusicalEntityID }, null)

                            performerIndex++;
                        }

                        if (!string.IsNullOrWhiteSpace(headliner.PerformingAs))
                        {
                            <text> (performing as <i>@headliner.PerformingAs</i>)</text>
                        }

                        current++;
                    }

                    if (count > 1)
                    {
                        <text> co-headlining</text>
                    }
                }

                @if ((eventListing.EventType == EventType.Concert) && (!string.IsNullOrWhiteSpace(eventListing.EventGroupName)))
                {
                    <text>(@eventListing.EventGroupName)</text>
                }

            </td>
        </tr>
                    }
</table>

