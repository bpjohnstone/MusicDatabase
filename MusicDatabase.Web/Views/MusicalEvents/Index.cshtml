@model IEnumerable<MusicalEventListing>
@using MusicDatabase.ViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@{
    var yearsList = from e in Model
                    group e by e.EventDate.Year into g
                    select new { Year = g.Key, Events = g };

}

@foreach(var year in yearsList.OrderByDescending(y => y.Year))
{
    <h4>@year.Year</h4>

    <table class="table">

        @foreach (var item in year.Events.OrderByDescending(e => e.EventDate))
        {
            <tr>
                <td>
                    @Html.ActionLink(item.EventDate.ToString("d MMMM yyyy"), "Details", new { ID = item.ID })
                </td>
                <td>

                    @if (((item.EventType != EventType.Concert) && (item.EventGroupID != null)) || (!string.IsNullOrWhiteSpace(item.EventName)))
                    {
                        if ((item.EventType != EventType.Concert) && (item.EventGroupID != null))
                        {
                            @Html.ActionLink(item.EventGroupName, "Groups", new { ID = item.EventGroupID })

                            switch (item.EventType)
                            {
                                case EventType.Festival:
                                    <span style="font-weight: bold; font-size: 10px; color: red;">[Festival]</span>
                                    break;
                                case EventType.MultiDayFestival:
                                    <span style="font-weight: bold; font-size: 10px; color: maroon;">[Multi-Day Festival]</span>
                                    break;
                            }

                            if (!string.IsNullOrWhiteSpace(item.EventName)) 
                            {
                                @Html.Raw(" - ");
                            }
                        }

                        if (!string.IsNullOrWhiteSpace(item.EventName))
                        {
                            @Html.Raw(item.EventName); 
                        }

                        <br />

                    }                  

                    @{ 

                        var performanceCount = item.Headliners.Count;
                        var performanceIndex = 1;
                    }

                    @foreach (var performance in item.Headliners)
                    {
                        if(performanceIndex > 1)
                        {
                            if(performanceIndex == performanceCount)
                            {
                                @Html.Raw(" and ");
                            }
                            else
                            {
                                @Html.Raw(", ");
                            }
                        }

                        var performerCount = performance.Performers.Count;
                        var performerIndex = 1;

                        foreach(var performer in performance.Performers.OrderBy(p => p.Position))
                        {
                            if(performerIndex > 1)
                            {
                                if(performerIndex == 2)
                                {
                                    <text> with </text>
                                }
                                else if(performerIndex == performerCount)
                                {
                                    <text> and </text>
                                }
                                else
                                {
                                    @Html.Raw(", ")
                                }
                            }

                            @Html.ActionLink(performer.MusicalEntityName, "Details", "MusicalEntities", new { ID = performer.MusicalEntityID }, null);

                            performerIndex++;
                        }

                        if(!string.IsNullOrWhiteSpace(performance.PerformingAs))
                        {
                            <text>(performing as <i>@performance.PerformingAs</i>)</text>
                        }

                        performanceIndex++;
                    }

                    @if(performanceCount > 1)
                    {
                        <text> co-headlining</text>
                    }

                    @if((item.EventType == EventType.Concert) && (item.EventGroupID != null))
                    {
                        @Html.Raw("(");
                        @Html.ActionLink(item.EventGroupName, "Groups", new { ID = item.EventGroupID });
                        @Html.Raw(" show)");
                    }

                </td>
                <td>
                    @if (item.VenueID != null)
                    {
                                @Html.ActionLink(item.VenueName, "Details", "Locations", new { ID = item.VenueID }, null)
                        @Html.Raw(", ")
                        <text>@item.VenueCity</text>
                    }
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.ID })
                </td>
            </tr>
        }


    </table>
}


